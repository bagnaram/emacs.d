* darwin (mac os x) specific settings

This file is a placeholder for any settings that are specific
to mac os x.

#+BEGIN_SRC emacs-lisp :padline no
  ;;; darwin.el -- Automatically generated darwin initialization file.
  ;;;
  ;;; This file is generated from the darwin.org file, so no edits
  ;;; should be made to this file directly.
  ;;;
  ;;; Commentary:
  ;;;
  ;;; See darwin.org for complete documentation.
  ;;;
  ;;; Code:
  ;;;

#+END_SRC

* Notification Messages

** Configuration

#+BEGIN_SRC emacs-lisp
  (defvar got/notifications-enabled t
    "If true, enable additional notifications processing.
  If NIL, do no additional notifications processing.")

  (defvar got/enable-speech nil
    "If true, enable speech notifications.  If NIL, disable speech.")


  (defvar got/enable-mac-notification t
    "If true, enable mac notifications center notifications")

  (defvar got/max-notification-text-len 64
    "Any notification text longer than this will be truncated")

#+END_SRC



This function will let you post messages to the Mac notifications
center via a small AppleScript.

#+BEGIN_SRC emacs-lisp
  (cl-defun got/message-notify (title text)
    "Post a message with the given TITLE and TEXT to the notifications center.

  If the ~deferred~ package is available, the notification is processed
  asynchronously.

  This is a Mac OS X specific function.  Note that double-quotes that occur
  in the TITLE and the TEXT are replaced with single quotes."
    (when got/notifications-enabled
      (let ((title (replace-regexp-in-string "\"" "'" title))
            (text (replace-regexp-in-string "\"" "'" (if (> (length text) got/max-notification-text-len)
                                                         (substring text 0 got/max-notification-text-len)
                                                       text)))
            (fn (lambda (title text)
                  (do-applescript (concat
                                   "say \""
                                   text
                                   "\" using \""
                                   "Tessa"
                                   "\"")))))
        (when got/enable-mac-notification
          (do-applescript (concat
                           "display notification \""
                           text
                           "\" with title \""
                           title
                           "\"")))
        (when got/enable-speech       
          (if (require 'deferred nil 'noerror)
              (deferred:call fn title text)
            (funcall fn title text))))))
#+END_SRC


** Darwin-Specific Helm Settings

Tell Helm to search spotlight indices when you execute
~helm-for-files~ (=M-s F=).

#+BEGIN_SRC emacs-lisp
  (when (require 'helm-aliases nil :noerror)
    (when (require 'helm-files nil :noerror)
      (add-to-list 'helm-for-files-preferred-list helm-source-mac-spotlight)))
#+END_SRC
